/*
 * QAN AutoApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = qan.Client.OpenAPIDateConverter;

namespace qan.qan
{
    /// <summary>
    /// ResponseWithdrawals
    /// </summary>
    [DataContract(Name = "Response_Withdrawals")]
    public partial class ResponseWithdrawals : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseWithdrawals" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ResponseWithdrawals() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResponseWithdrawals" /> class.
        /// </summary>
        /// <param name="address">The address to which the withdrawn amount is sent (required).</param>
        /// <param name="amount">The amount of value, provided in decimal format, corresponding to a certain value in gwei (required).</param>
        /// <param name="index">The index of the withdrawal to uniquely identify each withdrawal (required).</param>
        /// <param name="validatorIndex">The index of the validator who initiated the withdrawal (required).</param>
        public ResponseWithdrawals(string address = default(string), string amount = default(string), int index = default(int), int validatorIndex = default(int))
        {
            // to ensure "address" is required (not null)
            if (address == null)
            {
                throw new ArgumentNullException("address is a required property for ResponseWithdrawals and cannot be null");
            }
            this.Address = address;
            // to ensure "amount" is required (not null)
            if (amount == null)
            {
                throw new ArgumentNullException("amount is a required property for ResponseWithdrawals and cannot be null");
            }
            this.Amount = amount;
            this.Index = index;
            this.ValidatorIndex = validatorIndex;
        }

        /// <summary>
        /// The address to which the withdrawn amount is sent
        /// </summary>
        /// <value>The address to which the withdrawn amount is sent</value>
        [DataMember(Name = "Address", IsRequired = true, EmitDefaultValue = true)]
        public string Address { get; set; }

        /// <summary>
        /// The amount of value, provided in decimal format, corresponding to a certain value in gwei
        /// </summary>
        /// <value>The amount of value, provided in decimal format, corresponding to a certain value in gwei</value>
        [DataMember(Name = "Amount", IsRequired = true, EmitDefaultValue = true)]
        public string Amount { get; set; }

        /// <summary>
        /// The index of the withdrawal to uniquely identify each withdrawal
        /// </summary>
        /// <value>The index of the withdrawal to uniquely identify each withdrawal</value>
        [DataMember(Name = "Index", IsRequired = true, EmitDefaultValue = true)]
        public int Index { get; set; }

        /// <summary>
        /// The index of the validator who initiated the withdrawal
        /// </summary>
        /// <value>The index of the validator who initiated the withdrawal</value>
        [DataMember(Name = "ValidatorIndex", IsRequired = true, EmitDefaultValue = true)]
        public int ValidatorIndex { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ResponseWithdrawals {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  ValidatorIndex: ").Append(ValidatorIndex).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
