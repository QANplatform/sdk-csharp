/*
 * QAN AutoApi
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using qan.Client;
using qan.Api;
// uncomment below to import models
//using qan.qan;

namespace qan.Test.Api
{
    /// <summary>
    ///  Class for testing QANApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class QANApiTests : IDisposable
    {
        private QANApi instance;

        public QANApiTests()
        {
            instance = new QANApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QANApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' QANApi
            //Assert.IsType<QANApi>(instance);
        }

        /// <summary>
        /// Test QanBlockNumber
        /// </summary>
        [Fact]
        public void QanBlockNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanBlockNumber();
            //Assert.IsType<OutputBlockNumber>(response);
        }

        /// <summary>
        /// Test QanCall
        /// </summary>
        [Fact]
        public void QanCallTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputCall inputCall = null;
            //var response = instance.QanCall(inputCall);
            //Assert.IsType<OutputCall>(response);
        }

        /// <summary>
        /// Test QanChainId
        /// </summary>
        [Fact]
        public void QanChainIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanChainId();
            //Assert.IsType<OutputChainId>(response);
        }

        /// <summary>
        /// Test QanEstimateGas
        /// </summary>
        [Fact]
        public void QanEstimateGasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputEstimateGas inputEstimateGas = null;
            //var response = instance.QanEstimateGas(inputEstimateGas);
            //Assert.IsType<OutputEstimateGas>(response);
        }

        /// <summary>
        /// Test QanFeeHistory
        /// </summary>
        [Fact]
        public void QanFeeHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputFeeHistory inputFeeHistory = null;
            //var response = instance.QanFeeHistory(inputFeeHistory);
            //Assert.IsType<OutputFeeHistory>(response);
        }

        /// <summary>
        /// Test QanGasPrice
        /// </summary>
        [Fact]
        public void QanGasPriceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanGasPrice();
            //Assert.IsType<OutputGasPrice>(response);
        }

        /// <summary>
        /// Test QanGetBalance
        /// </summary>
        [Fact]
        public void QanGetBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //string? blockNumber = null;
            //var response = instance.QanGetBalance(address, blockNumber);
            //Assert.IsType<OutputGetBalance>(response);
        }

        /// <summary>
        /// Test QanGetBlockByHash
        /// </summary>
        [Fact]
        public void QanGetBlockByHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //bool transactionDetailFlag = null;
            //var response = instance.QanGetBlockByHash(hash, transactionDetailFlag);
            //Assert.IsType<OutputGetBlockByHash>(response);
        }

        /// <summary>
        /// Test QanGetBlockByNumber
        /// </summary>
        [Fact]
        public void QanGetBlockByNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockNumber = null;
            //bool transactionDetailFlag = null;
            //var response = instance.QanGetBlockByNumber(blockNumber, transactionDetailFlag);
            //Assert.IsType<OutputGetBlockByNumber>(response);
        }

        /// <summary>
        /// Test QanGetBlockReceipts
        /// </summary>
        [Fact]
        public void QanGetBlockReceiptsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockNumber = null;
            //var response = instance.QanGetBlockReceipts(blockNumber);
            //Assert.IsType<OutputGetBlockReceipts>(response);
        }

        /// <summary>
        /// Test QanGetBlockTransactionCountByHash
        /// </summary>
        [Fact]
        public void QanGetBlockTransactionCountByHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //var response = instance.QanGetBlockTransactionCountByHash(hash);
            //Assert.IsType<OutputGetBlockTransactionCountByHash>(response);
        }

        /// <summary>
        /// Test QanGetBlockTransactionCountByNumber
        /// </summary>
        [Fact]
        public void QanGetBlockTransactionCountByNumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockNumber = null;
            //var response = instance.QanGetBlockTransactionCountByNumber(blockNumber);
            //Assert.IsType<OutputGetBlockTransactionCountByNumber>(response);
        }

        /// <summary>
        /// Test QanGetCode
        /// </summary>
        [Fact]
        public void QanGetCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //string? blockNumber = null;
            //var response = instance.QanGetCode(address, blockNumber);
            //Assert.IsType<OutputGetCode>(response);
        }

        /// <summary>
        /// Test QanGetFilterChanges
        /// </summary>
        [Fact]
        public void QanGetFilterChangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterId = null;
            //var response = instance.QanGetFilterChanges(filterId);
            //Assert.IsType<OutputGetFilterChanges>(response);
        }

        /// <summary>
        /// Test QanGetFilterLogs
        /// </summary>
        [Fact]
        public void QanGetFilterLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.QanGetFilterLogs(id);
            //Assert.IsType<OutputGetFilterLogs>(response);
        }

        /// <summary>
        /// Test QanGetLogs
        /// </summary>
        [Fact]
        public void QanGetLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputGetLogs inputGetLogs = null;
            //var response = instance.QanGetLogs(inputGetLogs);
            //Assert.IsType<OutputGetLogs>(response);
        }

        /// <summary>
        /// Test QanGetProof
        /// </summary>
        [Fact]
        public void QanGetProofTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputGetProof inputGetProof = null;
            //var response = instance.QanGetProof(inputGetProof);
            //Assert.IsType<OutputGetProof>(response);
        }

        /// <summary>
        /// Test QanGetStorageAt
        /// </summary>
        [Fact]
        public void QanGetStorageAtTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputGetStorageAt inputGetStorageAt = null;
            //var response = instance.QanGetStorageAt(inputGetStorageAt);
            //Assert.IsType<OutputGetStorageAt>(response);
        }

        /// <summary>
        /// Test QanGetTransactionByBlockHashAndIndex
        /// </summary>
        [Fact]
        public void QanGetTransactionByBlockHashAndIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockHash = null;
            //string index = null;
            //var response = instance.QanGetTransactionByBlockHashAndIndex(blockHash, index);
            //Assert.IsType<OutputGetTransactionByBlockHashAndIndex>(response);
        }

        /// <summary>
        /// Test QanGetTransactionByBlockNumberAndIndex
        /// </summary>
        [Fact]
        public void QanGetTransactionByBlockNumberAndIndexTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string blockNumber = null;
            //string index = null;
            //var response = instance.QanGetTransactionByBlockNumberAndIndex(blockNumber, index);
            //Assert.IsType<OutputGetTransactionByBlockNumberAndIndex>(response);
        }

        /// <summary>
        /// Test QanGetTransactionByHash
        /// </summary>
        [Fact]
        public void QanGetTransactionByHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //var response = instance.QanGetTransactionByHash(hash);
            //Assert.IsType<OutputGetTransactionByHash>(response);
        }

        /// <summary>
        /// Test QanGetTransactionCount
        /// </summary>
        [Fact]
        public void QanGetTransactionCountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //string blockNumber = null;
            //var response = instance.QanGetTransactionCount(address, blockNumber);
            //Assert.IsType<OutputGetTransactionCount>(response);
        }

        /// <summary>
        /// Test QanGetTransactionReceipt
        /// </summary>
        [Fact]
        public void QanGetTransactionReceiptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string hash = null;
            //var response = instance.QanGetTransactionReceipt(hash);
            //Assert.IsType<OutputGetTransactionReceipt>(response);
        }

        /// <summary>
        /// Test QanMaxPriorityFeePerGas
        /// </summary>
        [Fact]
        public void QanMaxPriorityFeePerGasTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanMaxPriorityFeePerGas();
            //Assert.IsType<OutputMaxPriorityFeePerGas>(response);
        }

        /// <summary>
        /// Test QanNewBlockFilter
        /// </summary>
        [Fact]
        public void QanNewBlockFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanNewBlockFilter();
            //Assert.IsType<OutputNewBlockFilter>(response);
        }

        /// <summary>
        /// Test QanNewFilter
        /// </summary>
        [Fact]
        public void QanNewFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputNewFilter inputNewFilter = null;
            //var response = instance.QanNewFilter(inputNewFilter);
            //Assert.IsType<OutputNewFilter>(response);
        }

        /// <summary>
        /// Test QanNewPendingTransactionFilter
        /// </summary>
        [Fact]
        public void QanNewPendingTransactionFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanNewPendingTransactionFilter();
            //Assert.IsType<OutputNewPendingTransactionFilter>(response);
        }

        /// <summary>
        /// Test QanSendRawTransaction
        /// </summary>
        [Fact]
        public void QanSendRawTransactionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //InputSendRawTransaction inputSendRawTransaction = null;
            //var response = instance.QanSendRawTransaction(inputSendRawTransaction);
            //Assert.IsType<OutputSendRawTransaction>(response);
        }

        /// <summary>
        /// Test QanSyncing
        /// </summary>
        [Fact]
        public void QanSyncingTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.QanSyncing();
            //Assert.IsType<OutputSyncing>(response);
        }

        /// <summary>
        /// Test QanUninstallFilter
        /// </summary>
        [Fact]
        public void QanUninstallFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filterId = null;
            //var response = instance.QanUninstallFilter(filterId);
            //Assert.IsType<OutputUninstallFilter>(response);
        }

        /// <summary>
        /// Test QanXlinkValid
        /// </summary>
        [Fact]
        public void QanXlinkValidTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string address = null;
            //var response = instance.QanXlinkValid(address);
            //Assert.IsType<OutputXlinkValid>(response);
        }
    }
}
